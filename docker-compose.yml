services:
  redis:
    image: redis:7-alpine

  db:
    image: postgres:latest
    container_name: db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  django:
    container_name: django
    build:
      context: ./app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app:/usr/src/app/
      - ./uploads:/app/uploads
    ports:
      - "8001:8000"
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_URL=${REDIS_URL}

  react:
    container_name: react
    build:
      context: ./my-frontend
    volumes:
      - ./my-frontend:/app
      - react_node_modules:/app/node_modules
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=${NODE_ENV}
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
      - WDS_SOCKET_HOST=${WDS_SOCKET_HOST}
      - GENERATE_SOURCEMAP=${GENERATE_SOURCEMAP}
    depends_on:
      - django

  celery:
    container_name: celery
    build:
      context: ./app
    command: celery --app=app worker -l INFO
    volumes:
      - ./app:/usr/src/app/
      - ./uploads:/app/uploads
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_URL=${REDIS_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}

volumes:
  postgres_data:
  react_node_modules:
